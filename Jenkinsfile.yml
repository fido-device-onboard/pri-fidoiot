// This job will be restricted to run only on 'ubuntu18.04-OnDemand' Build machine
node('ubuntu18.04-OnDemand'){

  // Stage for checking out the source code
  stage('scm checkout'){
    cleanWs()
    checkout scm
  }

  // Stage to build the project
  stage('build'){
    sh 'mvn clean install'
    print "Archive the artifacts"
    sh 'tar -czvf demo.tar.gz demo/'
    archiveArtifacts artifacts: 'demo.tar.gz', fingerprint: true, allowEmptyArchive: false
  }

  try
  {
    // Run the smoke test
    stage('Run Smoke test')
    {

      // Checking out the smoke test code
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'sdo-test']], userRemoteConfigs: [[credentialsId: 'sdo-automationgithubtoken', url: 'https://github.com/secure-device-onboard-ci/sdo-test']]])

      // Creating the required directories
      sh '''
        mkdir -p sdo-test/binaries
        mkdir -p sdo-test/binaries/pri-fidoiot
      '''

      // Extract and copy the demo.tar content to the location
      sh '''
        cp -r demo/* sdo-test/binaries/pri-fidoiot
      '''

      // Setting the TEST_DIR and executing smoke test
      sh'''
        cd sdo-test
        export TEST_DIR=`pwd`
        mvn clean verify -Dgroups=fido_smoketest
      '''
    }
  }
  finally
  {
    // Remove the files
    print "Removing the files"
    sh'''
      rm -f sdo-test/credential.bin
      rm -f sdo-test/ext_voucher
      rm -f sdo-test/guid
      rm -f sdo-test/linux64.sh
      rm -f sdo-test/payload.bin
      rm -f sdo-test/result.txt
    '''

    print "Pruning docker containers"
    sh'''
      docker system prune -a -f
    '''
  }
}
