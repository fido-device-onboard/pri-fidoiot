hibernate-properties:
  hibernate.connection.username: $(db_user)
  hibernate.connection.password: $(db_password)
  hibernate.connection.url: jdbc:mariadb://host.docker.internal:3306/emdb?useSSL=$(useSSL)
  hibernate.connection.requireSSL: $(requireSSL)
  hibernate.connection.autoReconnect: true
  hibernate.dialect: org.hibernate.dialect.MariaDBDialect

system-properties:
  log4j.configurationFile: log4j2.xml
  app-data.dir: ./app-data
  application.version: 1.1.7
  service.name: "Owner"
  server.api.user: $(api_user)
  server.api.password: "null"
  javax.net.ssl.keyStorePassword: default
  javax.net.ssl.trustStorePassword: default
  javax.net.ssl.keyStore: $(secrets.path)/api-user.pem
  javax.net.ssl.trustStore: $(secrets.path)/ca-cert.pem
  javax.net.ssl.keyStoreType: PEM
  javax.net.ssl.trustStoreType: PEM
  #javax.net.debug: ssl:handshake
  #log4j.logger.org.apache.http.impl.conn: DEBUG
  #log4j.logger.org.apache.http.impl.client: DEBUG
  #log4j.logger.org.apache.http.client: DEBUG
  # set system proxy information
  #http.proxyHost:
  #http.proxyPort:
  #https.proxyHost:
  #https.proxyPort:
  #http.nonProxyHosts:


secrets:
  - db_password


http-server:
  base_path: .
  http_port: 8042
  https_port: 8043
  http_schemes:
  - http
  - https
  http_timeout: 20000
  server_cert: $(secrets.path)/server-cert.pem
  server_key: $(secrets.path)/server-key.pem
  truststore_file: $(secrets.path)/ca-cert.pem
  truststore_type: PEM
  certificate_verification: want
  protocols: TLSv1.3
  certificate_verification_depth: 2
  
to0-scheduler:
    thread-count: 5
    interval: 120

owner:
   keystore: 
     path: owner.p12
     store-type: PKCS12
     password: $(encrypt_password)
   replacement:
     keystore: 
       path: replacement.p12
       store-type: PKCS12
       password: $(encrypt_password)
   to0-scheduler:
    thread-count: 5
    interval: 120
   

epid:
  # WARNING: do not set testmode to true in production environments
  # if testmode is true, EPID signature verification will only
  # fail for non-signature issues (i.e. malformed requests)
  testMode: false
  # TBD: the url below is the used for production purposes
  # url: http://verifier.fdorv.com
  # the url below is used for testing purposes only
  url: http://verifier.fdorv.com



#  *********************** NOTE **********************************************
#
# Out of the box, FDO services are configured to use trusted certificates.
# In test environments, the user can enable the trust for self-signed certificates
# by updating the worker list in `service.yml` file of respective component.
#
# Enable the following workers
#
#  - org.fidoalliance.fdo.protocol.SelfSignedHttpClientSupplier
#  - org.fidoalliance.fdo.protocol.db.BasicServiceInfoClientSupplier
#
# and Disable
#
#  - org.fidoalliance.fdo.protocol.StandardHttpClientSupplier
#  - org.fidoalliance.fdo.protocol.db.StandardServiceInfoClientSupplier
#
# *****************************************************************************

workers:
  - org.fidoalliance.fdo.protocol.StandardLogProvider
  - org.fidoalliance.fdo.protocol.StandardExceptionConsumer
  - org.fidoalliance.fdo.protocol.StandardMessageDispatcher
  - org.fidoalliance.fdo.protocol.StandardCryptoService
  - org.fidoalliance.fdo.protocol.StandardHttpServer
  - org.fidoalliance.fdo.protocol.StandardDatabaseServer
  - org.fidoalliance.fdo.protocol.StandardOwnerKeySupplier
  - org.fidoalliance.fdo.protocol.StandardCwtKeySupplier
  - org.fidoalliance.fdo.protocol.StandardReplacementKeySupplier
  #- Use StandardHttpClientSupplier for secure Production configurations.
  - org.fidoalliance.fdo.protocol.StandardHttpClientSupplier
  #- org.fidoalliance.fdo.protocol.HttpOwnerSchemeSupplier 
  - org.fidoalliance.fdo.protocol.StandardOwnerSchemeSupplier
  - org.fidoalliance.fdo.protocol.db.StandardServiceInfoClientSupplier
  # Disable BasicServiceInfoClientSupplier in Production Environment to perform SSL certificate verification.
  # Use StandardServiceInfoClientSupplier for secure Production configurations.
  #- org.fidoalliance.fdo.protocol.db.BasicServiceInfoClientSupplier
  - org.fidoalliance.fdo.protocol.db.OnDieCertificateManager
  - org.fidoalliance.fdo.protocol.db.StandardKeyStoreInputStream
  - org.fidoalliance.fdo.protocol.db.StandardKeyStoreOutputStream
  #- org.fidoalliance.fdo.protocol.FileKeyStoreInputStream
  #- org.fidoalliance.fdo.protocol.FileKeyStoreOutputStream
  - org.fidoalliance.fdo.protocol.db.To0Scheduler
  - org.fidoalliance.fdo.protocol.db.StandardSessionCleaner
  - org.fidoalliance.fdo.protocol.db.StandardAcceptOwnerFunction
  - org.fidoalliance.fdo.protocol.db.StandardValidityDaysSupplier
  - org.fidoalliance.fdo.protocol.db.StandardServerSessionManager
  - org.fidoalliance.fdo.protocol.db.StandardExtraInfoSupplier
  - org.fidoalliance.fdo.protocol.db.StandardVoucherQueryFunction
  - org.fidoalliance.fdo.protocol.db.StandardVoucherReplacementFunction
  #- org.fidoalliance.fdo.protocol.db.ReuseVoucherReplacementFunction
  - org.fidoalliance.fdo.protocol.db.StandardReplacementVoucherStorageFunction 
  - org.fidoalliance.fdo.protocol.db.StandardRendezvousWaitSecondsSupplier
  - org.fidoalliance.fdo.protocol.db.StandardOwnerInfoSizeSupplier
  - org.fidoalliance.fdo.protocol.db.ConformanceOwnerModule
  - org.fidoalliance.fdo.protocol.db.StandardServiceInfoDocumentSupplier
  - org.fidoalliance.fdo.protocol.db.FdoSimDownloadOwnerModule
  - org.fidoalliance.fdo.protocol.db.FdoSimUploadOwnerModule
  - org.fidoalliance.fdo.protocol.db.FdoSimCommandOwnerModule
  - org.fidoalliance.fdo.protocol.db.FdoSimWebGetOwnerModule
  - org.fidoalliance.fdo.protocol.db.FdoSimCsrOwnerModule
  - org.fidoalliance.fdo.protocol.db.FdoSysOwnerModule




