hibernate-properties:
  connection.driver_class: org.h2.Driver
  hibernate.connection.username: $(db_user)
  hibernate.connection.password: $(db_password)
  hibernate.connection.url: jdbc:h2:tcp://localhost:8051/./app-data/emdb
  hibernate.dialect: org.hibernate.dialect.H2Dialect

system-properties:
  log4j.configurationFile: log4j2.xml
  app-data.dir: ./app-data
  application.version: 1.1.3-SNAPSHOT
  service.name: "Owner"
  # Uncomment the below properties for proxy setup
  #http.proxyHost: $(http_host)
  #http.proxyPort: $(http_port)
  #https.proxyHost: $(https_host)
  #https.proxyPort: $(https_port)
  #http.nonProxyHosts: $(no_proxy)
  

http-server:
  base_path: app-data
  http_port: 8042
  https_port: 8043
  http_schemes:
  - http
  - https
  http_timeout: 20000
  keystore: 
    path: ssl.p12
    store-type: PKCS12
    password: $(ssl_password)
    alias: ssl
  auth:
    method: DIGEST
    role: api
    user_name: apiUser
    user_password: $(api_password)
  subject_names:
    - DNS:host.docker.internal
#    - IP:127.0.0.1
  to0-scheduler:
    thread-count: 5
    interval: 120

owner:
   keystore: 
     path: owner.p12
     store-type: PKCS12
     password: $(encrypt_password)
   replacement:
     keystore: 
       path: replacement.p12
       store-type: PKCS12
       password: $(encrypt_password)
   to0-scheduler:
     thread-count: 5
     interval: 120

epid:
  # WARNING: do not set testmode to true in production environments
  # if testmode is true, EPID signature verification will only
  # fail for non-signature issues (i.e. malformed requests)
  testMode: false
  # TBD: the url below is the used for production purposes
  # url: http://verify.epid-sbx.trustedservices.intel.com
  # the url below is used for testing purposes only
  url: http://verify.epid-sbx.trustedservices.intel.com


h2-database:
   tcp-server:
     - "-ifNotExists"
     - "-tcpPort" 
     - "8051"
   web-server:
     # - "-webAllowOthers"
     # - "-webExternalNames"
     # - "serverfqdn"
     - "-webPort"
     - "8085"
 

#  *********************** NOTE **********************************************
#
# For out of the box demo purposes, FDO services are configured to trust self-signed certificates.
# In production environments, the configurators should disable the trust for these self-signed certificates
# by updating the worker list in `service.yml` file of respective component.
#
# Disable the following workers
#
#  - org.fidoalliance.fdo.protocol.SelfSignedHttpClientSupplier
#  - org.fidoalliance.fdo.protocol.db.BasicServiceInfoClientSupplier
#
# and enable
#
#  - org.fidoalliance.fdo.protocol.StandardHttpClientSupplier
#  - org.fidoalliance.fdo.protocol.db.StandardServiceInfoClientSupplier
#
# *****************************************************************************

workers:
  - org.fidoalliance.fdo.protocol.StandardLogProvider
  - org.fidoalliance.fdo.protocol.StandardMessageDispatcher
  - org.fidoalliance.fdo.protocol.StandardCryptoService
  - org.fidoalliance.fdo.protocol.StandardHttpServer
  - org.fidoalliance.fdo.protocol.StandardDatabaseServer
  - org.fidoalliance.fdo.protocol.StandardOwnerKeySupplier
  - org.fidoalliance.fdo.protocol.StandardCwtKeySupplier
  - org.fidoalliance.fdo.protocol.StandardReplacementKeySupplier
  # Disable SelfSignedHttpClientSupplier in Production Environment to perform SSL certificate verification.
  # Use StandardHttpClientSupplier for secure Production configurations.
  - org.fidoalliance.fdo.protocol.SelfSignedHttpClientSupplier
  #- org.fidoalliance.fdo.protocol.StandardHttpClientSupplier
  #- org.fidoalliance.fdo.protocol.HttpOwnerSchemeSupplier 
  - org.fidoalliance.fdo.protocol.StandardOwnerSchemeSupplier
  #- org.fidoalliance.fdo.protocol.db.StandardServiceInfoClientSupplier
  # Disable BasicServiceInfoClientSupplier in Production Environment to perform SSL certificate verification.
  # Use StandardServiceInfoClientSupplier for secure Production configurations.
  - org.fidoalliance.fdo.protocol.db.BasicServiceInfoClientSupplier
  - org.fidoalliance.fdo.protocol.db.OnDieCertificateManager
  - org.fidoalliance.fdo.protocol.db.StandardKeyStoreInputStream
  - org.fidoalliance.fdo.protocol.db.StandardKeyStoreOutputStream
  - org.fidoalliance.fdo.protocol.db.To0Scheduler
  - org.fidoalliance.fdo.protocol.db.StandardSessionCleaner
  - org.fidoalliance.fdo.protocol.db.StandardAcceptOwnerFunction
  - org.fidoalliance.fdo.protocol.db.StandardValidityDaysSupplier
  - org.fidoalliance.fdo.protocol.db.StandardServerSessionManager
  - org.fidoalliance.fdo.protocol.db.StandardExtraInfoSupplier
  - org.fidoalliance.fdo.protocol.db.StandardVoucherQueryFunction
  - org.fidoalliance.fdo.protocol.db.StandardVoucherReplacementFunction
  #- org.fidoalliance.fdo.protocol.db.ReuseVoucherReplacementFunction
  - org.fidoalliance.fdo.protocol.db.StandardReplacementVoucherStorageFunction 
  - org.fidoalliance.fdo.protocol.db.StandardRendezvousWaitSecondsSupplier
  - org.fidoalliance.fdo.protocol.db.StandardOwnerInfoSizeSupplier
  - org.fidoalliance.fdo.protocol.db.ConformanceOwnerModule
  - org.fidoalliance.fdo.protocol.db.FdoSysOwnerModule




